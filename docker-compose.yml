version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      target: development
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8443/api
      - WATCHPACK_POLLING=true
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health || echo 'Frontend not ready'"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - DATABASE_URL=file:./data/dev.db
      - JWT_SECRET=${JWT_SECRET:-dev-jwt-secret-change-in-production}
      - ACCESS_TOKEN_TTL_MIN=${ACCESS_TOKEN_TTL_MIN:-15}
      - REFRESH_TOKEN_TTL_DAYS=${REFRESH_TOKEN_TTL_DAYS:-7}
      - UPLOAD_DIR=./uploads
      - PORT=5000
    volumes:
      - ./data:/app/data
      - ./uploads:/app/uploads
      - ./backend:/app
      - /app/node_modules
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  nginx:
    image: nginx:alpine
    ports:
      - "8443:8443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8443/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  data:
    driver: local
  uploads:
    driver: local
  node_modules_frontend:
  node_modules_backend:
