services:
  # Traefik reverse proxy
  traefik:
    image: traefik:v3.0
    container_name: traefik
    restart: unless-stopped
    ports:
      - "443:443"
      - "80:80"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik:/etc/traefik:ro
      - ./traefik/acme.json:/acme.json
    command:
      - --api.dashboard=true
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.file.directory=/etc/traefik
      - --providers.file.watch=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
      - --certificatesresolvers.letsencrypt.acme.email=admin@yourdomain.com
      - --certificatesresolvers.letsencrypt.acme.storage=/acme.json
      - --log.level=INFO
    networks:
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=https://do-dev.veyal.org/api
    container_name: reporting-frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://do-dev.veyal.org/api
    depends_on:
      - backend
    networks:
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`do-dev.veyal.org`) && PathPrefix(`/`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=letsencrypt"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
      - "traefik.http.routers.frontend.priority=10"

  # Backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: reporting-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=5000
      - DATABASE_URL=file:/app/data/prod.db
      - JWT_SECRET=${JWT_SECRET:-your-super-secure-jwt-secret-key-change-in-production}
      - ACCESS_TOKEN_TTL_MIN=15
      - REFRESH_TOKEN_TTL_DAYS=7
      - UPLOAD_DIR=./uploads
      - CORS_ORIGIN=https://do-dev.veyal.org
    volumes:
      - backend-uploads:/app/uploads
    networks:
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`do-dev.veyal.org`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=web,websecure"
      - "traefik.http.routers.backend.tls.certresolver=letsencrypt"
      - "traefik.http.services.backend.loadbalancer.server.port=5000"
      - "traefik.http.routers.backend.priority=100"
      - "traefik.http.routers.backend.service=backend"

volumes:
  backend-uploads:
    driver: local

networks:
  app-network:
    driver: bridge
